name: Update Hot Data

on:
  schedule:
    - cron: '0 */4 * * *'
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install axios xml2js

      - name: Fetch and parse RSS feeds
        run: |
          node -e "
          const axios = require('axios');
          const xml2js = require('xml2js');
          const fs = require('fs');
          const path = require('path');

          const rssFeeds = [
            { name: 'sina', url: 'http://rss.sina.com.cn/news/allnews/sports.xml' },
            { name: 'baidu', url: 'https://tieba.baidu.com/hottopic/browse/topicList' },
            { name: '36kr', url: 'https://36kr.com/feed' },
            { name: 'zhihu', url: 'https://www.zhihu.com/rss' }
          ];

          const parseXml = async (xml) => {
            return new Promise((resolve, reject) => {
              xml2js.parseString(xml, (err, result) => {
                if (err) reject(err);
                else resolve(result);
              });
            });
          };

          const fetchRss = async (url) => {
            try {
              const response = await axios.get(url);
              return response.data;
            } catch (error) {
              console.error(`Failed to fetch ${url}: ${error.message}`);
              return null;
            }
          };

          const processFeeds = async () => {
            const results = {};
            for (const feed of rssFeeds) {
              const xml = await fetchRss(feed.url);
              if (xml) {
                const parsed = await parseXml(xml);
                results[feed.name] = parsed.rss.channel[0].item.slice(0, 50);
              }
            }
            return results;
          };

          processFeeds().then(data => {
            const outputDir = path.join(process.env.GITHUB_WORKSPACE, 'public');
            if (!fs.existsSync(outputDir)) fs.mkdirSync(outputDir, { recursive: true });
            fs.writeFileSync(path.join(outputDir, 'hot.json'), JSON.stringify(data, null, 2));
          });
          "

      - name: Commit changes
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add public/hot.json
          git commit -m "Update hot data $(date +'%Y-%m-%d %H:%M:%S')"
          git push
name: Update Hot Data

on:
  schedule:
    - cron: '0 */4 * * *'   # 每 4 小时
  workflow_dispatch:        # 手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write        # 推送 hot.json 回仓库

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install axios

      - name: Fetch & Merge
        run: node scripts/aggregate.js

      - name: Commit & Push
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update hot.json $(date -u +%F_%H:%M)"
          file_pattern: public/hot.json